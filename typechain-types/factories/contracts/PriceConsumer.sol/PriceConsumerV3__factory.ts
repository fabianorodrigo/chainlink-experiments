/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PriceConsumerV3,
  PriceConsumerV3Interface,
} from "../../../contracts/PriceConsumer.sol/PriceConsumerV3";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_aggregatorAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getLatestPrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "teste",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516108ab3803806108ab833981810160405281019061003291906101a1565b61007b6040518060400160405280600a81526020017f61676772656761746f7200000000000000000000000000000000000000000000815250826100c160201b6101a21760201c565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506102eb565b61015f82826040516024016100d7929190610212565b6040516020818303038152906040527f319af333000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061016360201b60201c565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b60008151905061019b816102d4565b92915050565b6000602082840312156101b357600080fd5b60006101c18482850161018c565b91505092915050565b6101d38161025e565b82525050565b60006101e482610242565b6101ee818561024d565b93506101fe818560208601610290565b610207816102c3565b840191505092915050565b6000604082019050818103600083015261022c81856101d9565b905061023b60208301846101ca565b9392505050565b600081519050919050565b600082825260208201905092915050565b600061026982610270565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b838110156102ae578082015181840152602081019050610293565b838111156102bd576000848401525b50505050565b6000601f19601f8301169050919050565b6102dd8161025e565b81146102e857600080fd5b50565b6105b1806102fa6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638e15f4731461003b5780639ee4bacd14610059575b600080fd5b610043610077565b604051610050919061040d565b60405180910390f35b610061610165565b60405161006e9190610428565b60405180910390f35b60006100b76040518060400160405280600681526020017f656e74726f75000000000000000000000000000000000000000000000000000081525061023e565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561012057600080fd5b505afa158015610134573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610158919061033f565b5050509150508091505090565b60606040518060400160405280600581526020017f6261746575000000000000000000000000000000000000000000000000000000815250905090565b61023a82826040516024016101b892919061044a565b6040516020818303038152906040527f319af333000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506102d7565b5050565b6102d4816040516024016102529190610428565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506102d7565b50565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b60008151905061030f81610536565b92915050565b6000815190506103248161054d565b92915050565b60008151905061033981610564565b92915050565b600080600080600060a0868803121561035757600080fd5b60006103658882890161032a565b955050602061037688828901610300565b945050604061038788828901610315565b935050606061039888828901610315565b92505060806103a98882890161032a565b9150509295509295909350565b6103bf81610496565b82525050565b6103ce816104a8565b82525050565b60006103df8261047a565b6103e98185610485565b93506103f98185602086016104f2565b61040281610525565b840191505092915050565b600060208201905061042260008301846103c5565b92915050565b6000602082019050818103600083015261044281846103d4565b905092915050565b6000604082019050818103600083015261046481856103d4565b905061047360208301846103b6565b9392505050565b600081519050919050565b600082825260208201905092915050565b60006104a1826104b2565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b60005b838110156105105780820151818401526020810190506104f5565b8381111561051f576000848401525b50505050565b6000601f19601f8301169050919050565b61053f816104a8565b811461054a57600080fd5b50565b610556816104d2565b811461056157600080fd5b50565b61056d816104dc565b811461057857600080fd5b5056fea2646970667358221220a8f96718ffe47393900dc2578bb3955c47f29c68cafeca4aa1857ba14d56130164736f6c63430008040033";

type PriceConsumerV3ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PriceConsumerV3ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PriceConsumerV3__factory extends ContractFactory {
  constructor(...args: PriceConsumerV3ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _aggregatorAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PriceConsumerV3> {
    return super.deploy(
      _aggregatorAddress,
      overrides || {}
    ) as Promise<PriceConsumerV3>;
  }
  override getDeployTransaction(
    _aggregatorAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_aggregatorAddress, overrides || {});
  }
  override attach(address: string): PriceConsumerV3 {
    return super.attach(address) as PriceConsumerV3;
  }
  override connect(signer: Signer): PriceConsumerV3__factory {
    return super.connect(signer) as PriceConsumerV3__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PriceConsumerV3Interface {
    return new utils.Interface(_abi) as PriceConsumerV3Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PriceConsumerV3 {
    return new Contract(address, _abi, signerOrProvider) as PriceConsumerV3;
  }
}
