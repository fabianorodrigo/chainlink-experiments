/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PriceConsumerV3,
  PriceConsumerV3Interface,
} from "../../../contracts/PriceConsumer.sol/PriceConsumerV3";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_aggregatorAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getLatestPrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "teste",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516108bd3803806108bd833981810160405281019061003291906101a1565b61007b6040518060400160405280600a81526020017f61676772656761746f7200000000000000000000000000000000000000000000815250826100c160201b6101a21760201c565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506102f4565b61015f82826040516024016100d7929190610216565b6040516020818303038152906040527f319af333000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061016360201b60201c565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b60008151905061019b816102dd565b92915050565b6000602082840312156101b7576101b66102c7565b5b60006101c58482850161018c565b91505092915050565b6101d781610262565b82525050565b60006101e882610246565b6101f28185610251565b9350610202818560208601610294565b61020b816102cc565b840191505092915050565b6000604082019050818103600083015261023081856101dd565b905061023f60208301846101ce565b9392505050565b600081519050919050565b600082825260208201905092915050565b600061026d82610274565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b838110156102b2578082015181840152602081019050610297565b838111156102c1576000848401525b50505050565b600080fd5b6000601f19601f8301169050919050565b6102e681610262565b81146102f157600080fd5b50565b6105ba806103036000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638e15f4731461003b5780639ee4bacd14610059575b600080fd5b610043610077565b6040516100509190610411565b60405180910390f35b610061610165565b60405161006e919061042c565b60405180910390f35b60006100b76040518060400160405280600681526020017f656e74726f75000000000000000000000000000000000000000000000000000081525061023e565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561012057600080fd5b505afa158015610134573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610158919061033f565b5050509150508091505090565b60606040518060400160405280600581526020017f6261746575000000000000000000000000000000000000000000000000000000815250905090565b61023a82826040516024016101b892919061044e565b6040516020818303038152906040527f319af333000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506102d7565b5050565b6102d481604051602401610252919061042c565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506102d7565b50565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b60008151905061030f8161053f565b92915050565b60008151905061032481610556565b92915050565b6000815190506103398161056d565b92915050565b600080600080600060a0868803121561035b5761035a610529565b5b60006103698882890161032a565b955050602061037a88828901610300565b945050604061038b88828901610315565b935050606061039c88828901610315565b92505060806103ad8882890161032a565b9150509295509295909350565b6103c38161049a565b82525050565b6103d2816104ac565b82525050565b60006103e38261047e565b6103ed8185610489565b93506103fd8185602086016104f6565b6104068161052e565b840191505092915050565b600060208201905061042660008301846103c9565b92915050565b6000602082019050818103600083015261044681846103d8565b905092915050565b6000604082019050818103600083015261046881856103d8565b905061047760208301846103ba565b9392505050565b600081519050919050565b600082825260208201905092915050565b60006104a5826104b6565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b60005b838110156105145780820151818401526020810190506104f9565b83811115610523576000848401525b50505050565b600080fd5b6000601f19601f8301169050919050565b610548816104ac565b811461055357600080fd5b50565b61055f816104d6565b811461056a57600080fd5b50565b610576816104e0565b811461058157600080fd5b5056fea2646970667358221220115fd2c3736db30f57affea0cd8e767a41723dd8e26cd2cdaf4426c5df1c32bc64736f6c63430008070033";

type PriceConsumerV3ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PriceConsumerV3ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PriceConsumerV3__factory extends ContractFactory {
  constructor(...args: PriceConsumerV3ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _aggregatorAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PriceConsumerV3> {
    return super.deploy(
      _aggregatorAddress,
      overrides || {}
    ) as Promise<PriceConsumerV3>;
  }
  override getDeployTransaction(
    _aggregatorAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_aggregatorAddress, overrides || {});
  }
  override attach(address: string): PriceConsumerV3 {
    return super.attach(address) as PriceConsumerV3;
  }
  override connect(signer: Signer): PriceConsumerV3__factory {
    return super.connect(signer) as PriceConsumerV3__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PriceConsumerV3Interface {
    return new utils.Interface(_abi) as PriceConsumerV3Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PriceConsumerV3 {
    return new Contract(address, _abi, signerOrProvider) as PriceConsumerV3;
  }
}
